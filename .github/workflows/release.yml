name: 构建并发布 Minecraft 插件

on:
  push:
    tags:
      - '*' # 匹配任何标签，如 1.1.23-SNAPSHOT 或 v1.1.23
    branches: [ main ] # 普通构建
  pull_request:
    branches: [ main ]
  workflow_dispatch: # 手动触发
    inputs:
      tag:
        description: '发布版本标签 (如 v1.1.23，可留空使用 build.gradle 的版本)'
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # 允许创建 Release 和上传资产
    env:
      PLUGIN_NAME: VillagerPro # 固定插件名称

    steps:
      - name: 检出代码仓库
        uses: actions/checkout@v4

      - name: 设置 JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 设置 Gradle
        uses: gradle/actions/setup-gradle@v4
        # 未指定 gradle-version，使用项目默认或最新版本

      - name: 获取项目版本
        id: get_version
        run: |
          # 从 build.gradle 或 gradle.properties 获取版本号
          if [ -f "build.gradle" ]; then
          VERSION=$(grep -E '^\s*version\s*=' build.gradle | awk -F '=' '{print $2}' | tr -d " '\"")
          elif [ -f "gradle.properties" ]; then
          VERSION=$(grep -E '^\s*version\s*=' gradle.properties | awk -F '=' '{print $2}' | tr -d " '\"")
          else
          echo "错误：未找到 build.gradle 或 gradle.properties" >&2
          exit 1
          fi
          if [ -z "$VERSION" ] || [ "$VERSION" = "unspecified" ]; then
            echo "错误：未在 build.gradle 或 gradle.properties 中定义版本号" >&2
            exit 1
          fi
          echo "PROJECT_VERSION=$VERSION" >> $GITHUB_ENV
          echo "提取的版本号: $VERSION" # 调试信息
        shell: bash

      - name: 使用 Gradle 构建
        run: gradle build

      - name: 重命名 JAR 文件
        run: |
          echo "构建目录内容（重命名前）："
          ls -l build/libs/ || echo "build/libs/ 目录为空或不存在"
          mv build/libs/*.jar "build/libs/${{ env.PLUGIN_NAME }}-${{ env.PROJECT_VERSION }}.jar" || echo "未找到 JAR 文件或无需重命名"
          echo "构建目录内容（重命名后）："
          ls -l build/libs/ || echo "build/libs/ 目录为空"
        shell: bash

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: plugin-jar
          path: build/libs/${{ env.PLUGIN_NAME }}-${{ env.PROJECT_VERSION }}.jar
          if-no-files-found: error # 如果文件不存在，报错

      - name: 创建并上传到 GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.tag != '' && github.event.inputs.tag || env.PROJECT_VERSION }}
          name: ${{ env.PLUGIN_NAME }} v${{ github.event.inputs.tag != '' && github.event.inputs.tag || env.PROJECT_VERSION }}
          files: build/libs/${{ env.PLUGIN_NAME }}-${{ env.PROJECT_VERSION }}.jar
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}